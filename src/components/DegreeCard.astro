---
import LinkIcon from '../icons/Link.astro'
import Badge from './Badge.astro'
import Button from './Button.astro'

export interface Props {
	name: string
	issued: string
	issueDate: string
	expirationDate?: string
	credentialId: string
	description: string
	url?: string
	image: string
	tags?: { name: string; color: string }[]
}

const { name, issued, issueDate, expirationDate, credentialId, description, url, image, tags } =
	Astro.props
---

<div class="h-full w-full">
	<div
		class="flex h-full flex-col rounded-lg border border-gray-200 bg-light-1 shadow dark:border-gray-700 dark:bg-dark-1 md:flex-row"
	>
		<div class="h-[500px] overflow-hidden md:h-full md:w-2/5">
			<img
				class="h-full w-full object-cover object-top md:rounded-l-lg"
				src={image}
				alt=""
				loading="lazy"
				decoding="async"
			/>
		</div>
		<div class="flex h-full flex-col p-4 leading-normal md:w-3/5">
			<h5 class="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white">
				{name}
			</h5>
			<p class="mb-3 font-normal text-gray-700 dark:text-gray-400">
				{issued}
			</p>
			<p class="mb-3 font-normal text-gray-700 dark:text-gray-400">
				{description}
			</p>
			<p class="mb-3 font-normal text-gray-700 dark:text-gray-400">Emitido: {issueDate}</p>
			{
				expirationDate && (
					<p class="mb-3 font-normal text-gray-700 dark:text-gray-400">Caduca: {expirationDate}</p>
				)
			}
			<p class="mb-3 font-normal text-gray-700 dark:text-gray-400">
				Código de Credencial: {credentialId}
			</p>
			{
				tags && (
					<ul class="mb-2 flex flex-wrap gap-x-2 gap-y-2">
						{tags.map((tags) => (
							<li>
								<Badge color={tags.color}>{tags.name}</Badge>
							</li>
						))}
					</ul>
				)
			}
			{
				url && (
					<Button method="get" target="_blank" action={url}>
						Saber más..
						<LinkIcon class="ml-2 size-5" />
					</Button>
				)
			}
		</div>
	</div>
</div>
